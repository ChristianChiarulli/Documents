"Vundle

set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required

Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
Bundle 'Valloric/YouCompleteMe'
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}


" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Make code look pretty
let python_highlight_all=1
syntax on

set background=dark

"colorscheme zenburn


call togglebg#map("<F5>")

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

"split navigations
nnoremap <C-J> <C-W><C-J>
noremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


set splitbelow
set splitright


" Indents and stuff
au BufNewFile,BufRead *.py;
     set tabstop=4 |
     set softtabstop=4 |
     set shiftwidth=4 |
     set textwidth=79 | 
     set expandtab |
     set autoindent |
     set fileformat=unix |


au BufNewFile,BufRead *.js, *.html, *.css;
     set tabstop=2
     set softtabstop=2
     set shiftwidth=2

" Should help preview window go away
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Flag whitespace
"au BufRead,BufNewFile; *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" always use this when using python3
set encoding=utf-8

set number

colorscheme desert

"let g:syntastic_python_python_exec = '/usr/local/lib/python3.5'
"let g:syntastic_python_pyflakes_exe = 'python3 -m pyflakes'


"python with virtualenv support
"py3 << EOF
"import os
"import sys
"if 'VIRTUAL_ENV' in os.environ:
"  project_base_dir = os.environ['VIRTUAL_ENV']
"    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"      execfile(activate_this, dict(__file__=activate_this))
"      EOF


" Stuff for NERDtree
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists(“s:std_in”) | NERDTree | endif

map <silent> <C-n> :NERDTreeFocus<CR>

"autocmd bufenter * if (winnr(“$”) == 1 && exists(“b:NERDTreeType”) && b:NERDTreeType == “primary”) | q | endif
